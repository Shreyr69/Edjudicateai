import streamlit as st
import requests

API_URL = "http://127.0.0.1:8000"

st.set_page_config(page_title="Policy Explainer AI", layout="wide")
st.title("🧠 Policy Explainer AI")
st.markdown("Upload your policy documents and ask any question about them.")


st.subheader("📤 Upload Document")
uploaded_file = st.file_uploader("Upload PDF or DOCX", type=["pdf", "docx"])

if uploaded_file:
    with st.spinner("Uploading and indexing..."):
        response = requests.post(
            f"{API_URL}/upload_docs",
            files={"uploaded_files": (uploaded_file.name, uploaded_file.getvalue())}
        )
    if response.status_code == 200:
        st.success(response.json().get("message", "Upload succeeded!"))
    else:
        st.error(response.json().get("error", "Upload failed."))

st.markdown("---")


st.subheader("🔍 Ask a Question")
query = st.text_input("Enter your query in plain English")

if st.button("Submit Query") and query:
    with st.spinner("Thinking with Gemini..."):
        response = requests.post(f"{API_URL}/query", json={"query": query})
    if response.status_code == 200:
        result = response.json()

        if "error" in result:
            st.error("❌ Error: " + result["error"])
        else:
            st.success("✅ AI Answer:")
            st.markdown(f"**Q:** {result.get('query')}")
        
        # Display parsed JSON answer
            import json
            response_text = result.get("response", "")
            try:
                parsed = json.loads(response_text)
                st.json(parsed)
            except json.JSONDecodeError:
                st.markdown("**A (raw):**")
                st.code(response_text, language="json")

        # Clauses
            st.markdown("### 🔎 Referenced Clauses:")
            for i, clause in enumerate(result.get("retrieved_clauses", [])):
                st.markdown(f"**Clause {i+1}:**")
                st.code(clause, language="text")

    else:
        try:
            st.error("❌ Server Error: " + response.json().get("error", "Unknown error"))
        except:
            st.error("❌ Unknown Error occurred.")

